{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dd126ace_0b44695d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/depends/on/ChangeMessageStore.java",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-06-11T19:12:28Z",
      "side": 1,
      "message": "```suggestion\n    return changeFinder.findOne(cid).map(this::loadWithOrder).orElseGet(Collections::emptyList);\n\n```",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 110,
        "endChar": 44
      },
      "revId": "48617c15192ed641636c19402606d16f95b49842",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aaab2bc7_e1d1ab8d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/depends/on/ChangeMessageStore.java",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-06-11T19:12:28Z",
      "side": 1,
      "message": "```suggestion\n    ChangeNotes changeNotes \u003d\n        changeFinder\n            .findOne(patchSetId.changeId())\n            .orElseThrow(() -\u003e new NoSuchChangeException(patchSetId.changeId()));\n    ChangeResource changeResource \u003d changeResourceFactory.create(changeNotes, currentUser);\n    PatchSet patchSet \u003d changeNotes.load().getPatchSets().get(patchSetId);\n```",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 172,
        "endChar": 80
      },
      "revId": "48617c15192ed641636c19402606d16f95b49842",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef1a6a0d_f1ad27bf",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/depends/on/CoreListener.java",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-06-11T19:12:28Z",
      "side": 1,
      "message": "```suggestion\n            ChangeNotes sourceChange \u003d\n                changeFinder\n                    .findOne(sourceId.get())\n                    .orElseThrow(() -\u003e new NoSuchChangeException(sourceId.get()));\n            ChangeNotes destChange \u003d\n                changeFinder\n                    .findOne(destId.get())\n                    .orElseThrow(() -\u003e new NoSuchChangeException(destId.get()));\n            propagator.propagateFromSourceToDestination(\n                sourceChange.getChange(), destChange.getChange());\n```",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 63,
        "endChar": 78
      },
      "revId": "48617c15192ed641636c19402606d16f95b49842",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "776b592c_47b95c24",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/depends/on/DependsOnOperator.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-06-11T19:12:28Z",
      "side": 1,
      "message": "```suggestion\n      return changeMessageStore.load(change.getId()).stream()\n          .filter(DependsOn::isResolved)\n          .flatMap(dependsOn -\u003e changeFinder.findOne(dependsOn.id()).stream())\n          .anyMatch(\n              note -\u003e subQuery.asMatchable().match(changeDataFactory.create(note.getChange())));\n```",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 56,
        "endChar": 96
      },
      "revId": "48617c15192ed641636c19402606d16f95b49842",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d55096d_4dd6c275",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/depends/on/Propagator.java",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1152670
      },
      "writtenOn": "2024-06-11T19:12:28Z",
      "side": 1,
      "message": "Maybe replace with \n\u003e    changeFinder\n\u003e        .findOne(dep.id())\n\u003e        .map(ChangeNotes::getChange)\n\u003e        .map(Change::getKey)\n\u003e        .orElseGet(() -\u003e Change.Key.parse(Integer.toString(dep.id().get())));\n\nBut I don\u0027t know where to fit the comment",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 81,
        "endChar": 62
      },
      "revId": "48617c15192ed641636c19402606d16f95b49842",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}